<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lee_test">
	
	<!-- 임시 쿼리 * 세션에 접속한 사용자의 닉네임이 존재한다면 테이블에 저장하지 않도록 체크해주기 위한 쿼리 -->
   <select id="chatList_SelectOne" parameterType="java.lang.String" resultType="java.lang.Integer">
      SELECT COUNT(*) FROM LPCHATLIST WHERE USER_NICKNAME = #{user_nickname}
   </select>
   
	<!-- 로그인 시 세션에 접속한 사용자의 닉네임을 채팅 가능한 사용자 테이블에 입력-->
   <select id="chatList_Insert" parameterType="java.lang.String" resultType="java.lang.String">
      INSERT INTO LPCHATLIST VALUES(#{user_nickname})
   
      SELECT @@IDENTITY AS CHR_ID
   </select>
  
	 <!-- 세션의 사용자 목록 조회 -->
   <select id="chatList_SelectAll" resultType="java.lang.String">
      SELECT USER_NICKNAME FROM LPCHATLIST
   </select>
  
	<!-- 세션 만료시 세션에 없는 사용자의 닉네임을 채팅 리스트에서 제거함 -->
   <delete id="chatList_Delete" parameterType="java.util.List">
      DELETE FROM LPCHATLIST WHERE USER_NICKNAME = #{user_nickname}
   </delete>
   
   <!-- 채팅방 생성 -->
   <!-- 1. 기존에 상대방과 채팅방이 있는지 확인 -->
   <select id="chatRoom_Select" parameterType="java.util.Map" resultType="java.lang.String">
      SELECT CHR_ID FROM LPCHATROOM WHERE (CHR_SENDER, CHR_RECEIVER) IN ((#{sender}, #{receiver}),(#{receiver},#{sender}))
   </select>

   <!--  2.1 만약에 기존에 만들었던 채팅방이 있다면 나의 채팅 목록에서 보이게 만들어줌 -->
   <update id="chatRoom_UpdateOut" parameterType="java.lang.String">
      UPDATE LPCHATROOM SET CHR_SOUT='F', CHR_ROUT = 'F' WHERE CHR_ID = #{chr_id}
   </update>
   
   <!--  2.2 기존에 채팅방이 없다면 -> 채팅 리스트에 추가 -->
   <insert id="chatRoom_Insert" parameterType="java.util.Map">
      INSERT INTO LPCHATROOM VALUES(LPCHATROOM_SEQ.NEXTVAL, #{sender}, #{receiver}, 'F', 'F')
   </insert>
   <!-- 채팅방 생성 -->

   <!-- 채팅방 생성시 채팅방의 메시지를 저장해줄 공간을 생성 -->
<!--    <insert id="chatContent_Insert" parameterType="java.util.List"> -->
<!--       <foreach collection="list" item="item" open="INSERT ALL " separator=" " close="SELECT * FROM DUAL"> -->
<!--          INTO LPCHATCONTENT(CHC_ID, CHR_ID, USER_NICKNAME, CHC_MASSAGE, CHC_OUT, CHC_REGDATE) -->
<!--          VALUES (GET_CONTENT_SEQ, #{item.chr_id}, #{item.user_nickname}, '', 'F', SYSDATE) -->
<!--       </foreach> -->
<!--    </insert> -->



  
  <!-- 채팅방 메시지 업데이트 --> <!-- 테이블 변경으로 잠시 주석처리 -->
<!--    <update id="chatRoom_UpdateContent" parameterType="java.util.Map"> -->
<!--       UPDATE LPCHATROOM SET CHR_CONTENT = #{chr_content} WHERE CHR_ID = #{chr_id} -->
<!--    </update> -->

<!--    <select id="chatRoom_SelectContent" parameterType="java.lang.String" resultType="java.lang.String"> -->
<!--       SELECT CHR_CONTENT FROM LPCHATROOM WHERE CHR_ID = #{chr_id} -->
<!--    </select> -->

   <select id="chkChatMember" parameterType="java.lang.String" resultType="java.util.Map">
      SELECT CHR_SENDER, CHR_RECEIVER FROM LPCHATROOM
      WHERE CHR_ID = #{chr_id}
   </select>

   <select id="chkDelflag" parameterType="java.lang.String" resultType="java.lang.String">
      SELECT USER_DELFLAG FROM LPUSER
      WHERE USER_EMAIL = #{user_email}
   </select>
</mapper>